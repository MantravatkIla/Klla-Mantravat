/**
 * Created by ketangote on 11/21/17.
 */
import { ElementRef, OnChanges, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { CommonDataService } from '../../services/data/common.data.service';
export declare class AmexioTypeAheadComponent implements ControlValueAccessor, OnChanges, OnInit {
    dataService: CommonDataService;
    element: ElementRef;
    renderer: Renderer2;
    fieldlabel: string;
    allowblank: boolean;
    _data: any;
    componentLoaded: boolean;
    data: any;
    datareader: string;
    httpmethod: string;
    httpurl: string;
    displayfield: string;
    valuefield: string;
    onBlur: any;
    input: any;
    focus: any;
    change: any;
    onClick: any;
    errormsg: string;
    placeholder: string;
    iconfeedback: boolean;
    fontstyle: string;
    fontfamily: string;
    fontsize: string;
    haslabel: boolean;
    enablepopover: boolean;
    key: any;
    triggerchar: number;
    rootDiv: any;
    maskloader: boolean;
    dpList: any;
    dropdownitems: ElementRef;
    posixUp: boolean;
    activeindex: number;
    currentActive: any;
    displayValue: any;
    helpInfoMsg: string;
    _errormsg: string;
    isValid: boolean;
    selectedindex: number;
    scrollposition: number;
    showToolTip: boolean;
    disabled: boolean;
    isComponentValid: any;
    responseData: any;
    previousData: any;
    viewData: any;
    filteredResult: any;
    private innerValue;
    private onTouchedCallback;
    private onChangeCallback;
    geterrormsg(): string;
    navigateKey(event: any): void;
    onElementOutClick(targetElement: HTMLElement): void;
    constructor(dataService: CommonDataService, element: ElementRef, renderer: Renderer2);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    onKeyUp(event: any): void;
    onChange(event: any): void;
    navigateUsingKey(event: any): void;
    private navigateByKeyCode(event);
    setData(httpResponse: any): void;
    onItemSelect(row: any): void;
    value: any;
    onblur(): void;
    onFocus(elem: any): void;
    getListPosition(elementRef: any): boolean;
    onInput(input: any): void;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    checkValidity(): boolean;
    onclick(): void;
}
